# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /Users/venkat.chinni/Documents/study/python-multithreading
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 152
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 52
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 1126
    content: c
  - delay: 68
    content: l
  - delay: 48
    content: e
  - delay: 60
    content: a
  - delay: 76
    content: r
  - delay: 88
    content: "\r\n\e[H\e[2JIT-VCHIN-Ms-MacBook-Pro:python-multithreading venkat.chinni$ "
  - delay: 759
    content: "\r\e[39P(reverse-i-search)`':\e[C"
  - delay: 259
    content: "\b\b\bp': pip install 'pymongo[srv]'\b\b\b\b\b\b\b\b\b\b\b\b\b"
  - delay: 150
    content: "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\e[1@y\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C\e[C"
  - delay: 114
    content: "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\e[19Pt': python\b\b\b\b\b\b"
  - delay: 104
    content: "\b\b\b\e[1@h\e[C\e[C\e[C"
  - delay: 80
    content: "\b\b\b\e[1@o\e[C\e[C\e[C"
  - delay: 115
    content: "\b\b\b\e[1@n\e[C\e[C\e[C"
  - delay: 1285
    content: "\a"
  - delay: 788
    content: "\r\nIT-VCHIN-Ms-MacBook-Pro:python-multithreading venkat.chinni$ "
  - delay: 1338
    content: p
  - delay: 133
    content: 'y'
  - delay: 92
    content: t
  - delay: 76
    content: h
  - delay: 92
    content: o
  - delay: 68
    content: 'n'
  - delay: 151
    content: ' '
  - delay: 223
    content: m
  - delay: 140
    content: a
  - delay: 78
    content: i
  - delay: 195
    content: 'n.py '
  - delay: 620
    content: "\r\n"
  - delay: 1046
    content: " ******************* Starting IO based multi threading test ***************\r\nStart time IO task 1634596083078\r\nStarted thread for io First Thread using pid 97377\r\nStarted thread for io Second Thread using pid 97377\r\nStarted thread for io Third Thread using pid 97377\r\n"
  - delay: 3034
    content: "Time taken in sec for I/O task: 3037\r\n ******************* Starting IO based asyncio test ***************\r\nStart time IO task 1634596086116\r\n"
  - delay: 3013
    content: "Time taken in sec for I/O task using asyncio: 3013\r\n ******************* Starting CPU based multi threading test ***************\r\nStart time CPU task 1634596089130\r\nStarted thread for cpu First Thread using pid 97377\r\n"
  - delay: 18
    content: "Started thread for cpu Second Thread using pid 97377\r\n"
  - delay: 22
    content: "Started thread for cpu Third Thread using pid 97377\r\n"
  - delay: 11495
    content: "Done with cpu work\r\n"
  - delay: 34
    content: "Done with cpu work\r\n"
  - delay: 13
    content: "Done with cpu work\r\nTime taken in sec for CPU task with multithreading: 11583\r\n ******************* Starting CPU based multi processing test ***************\r\n"
  - delay: 553
    content: "Started thread for cpu Second Thread using pid 97395\r\nStarted thread for cpu Third Thread using pid 97396\r\nStarted thread for cpu First Thread using pid 97394\r\n"
  - delay: 4071
    content: "Done with cpu work\r\nDone with cpu work\r\nDone with cpu work\r\n"
  - delay: 58
    content: "Time taken in sec for CPU task with multithreading: 4683\r\n ******************* Starting CPU based multi processing test with pool ***************\r\n"
  - delay: 548
    content: "Started thread for cpu First Thread using pid 97397\r\nStarted thread for cpu Second Thread using pid 97399\r\nStarted thread for cpu Third Thread using pid 97398\r\n"
  - delay: 3946
    content: "Done with cpu work\r\nDone with cpu work\r\nDone with cpu work\r\n"
  - delay: 9
    content: "Time taken in sec for CPU task with multithreading: 4513\r\n ******************* Starting CPU based multi processing test with thread pool ***************\r\n"
  - delay: 6
    content: "Started thread for cpu First Thread using pid 97377\r\n"
  - delay: 6
    content: "Started thread for cpu Second Thread using pid 97377\r\n"
  - delay: 17
    content: "Started thread for cpu Third Thread using pid 97377\r\n"
  - delay: 11336
    content: "Done with cpu work\r\n"
  - delay: 7
    content: "Done with cpu work\r\n"
  - delay: 72
    content: "Done with cpu work\r\nTime taken in sec for CPU task with multithreading: 11445\r\n"
  - delay: 51
    content: 'IT-VCHIN-Ms-MacBook-Pro:python-multithreading venkat.chinni$ '
  - delay: 2321
    content: "logout\r\n"
